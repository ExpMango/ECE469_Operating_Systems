; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3
	nop	; delay slot nop
	j	L2
	nop	; delay slot nop
L3:
	addi	r1,r0,#1
L2:
	j	L1
	nop	; delay slot nop
L1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6
	nop	; delay slot nop
	j	L7
	nop	; delay slot nop
L7:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6
	nop	; delay slot nop
	j	L8
	nop	; delay slot nop
L8:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6
	nop	; delay slot nop
	j	L5
	nop	; delay slot nop
L6:
	addi	r1,r0,#1
L5:
	j	L4
	nop	; delay slot nop
L4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#15
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L9
	nop	; delay slot nop
L9:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L10
	nop	; delay slot nop
L10:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	add	r1,r0,r29
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r3,r0,r1
	add	r1,r0,r3
	j	L11
	nop	; delay slot nop
L11:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.data
	.align 2
_curr_message_use:
	.word 0
	.align 2
_global_create_lock:
	.word -1
	.align 2
_global_find_empty_buffer_lock:
	.word -1
.text
	.align 2
.proc _MboxModuleInit
.global _MboxModuleInit
_MboxModuleInit:
;  Function 'MboxModuleInit'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L13:
	lw	r1,-12(r30)
	slei	r2,r1,#49
	bnez	r2,L16
	nop	; delay slot nop
	j	L14
	nop	; delay slot nop
L16:
	lhi	r1,((_mbox_message_array)>>16)&0xffff
	addui	r1,r1,(_mbox_message_array)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	lhi	r2,((_mbox_message_array)>>16)&0xffff
	addui	r2,r2,(_mbox_message_array)&0xffff
	lw	r3,-12(r30)
	add	r5,r0,r3
	slli	r4,r5,#0x3
	sub	r4,r4,r3
	slli	r5,r4,#0x2
	sub	r5,r5,r3
	slli	r3,r5,#0x2
	add	r2,r2,r3
	addi	r3,r0,#0
	sw	104(r2),r3
	addi	r2,r0,#0
	sw	100(r1),r2
L15:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L13
	nop	; delay slot nop
L14:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L17:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L20
	nop	; delay slot nop
	j	L18
	nop	; delay slot nop
L20:
	lhi	r1,((_mbox_array)>>16)&0xffff
	addui	r1,r1,(_mbox_array)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	(r1),r2
	lhi	r1,((_mbox_array)>>16)&0xffff
	addui	r1,r1,(_mbox_array)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	addi	r2,r0,#-1
	sw	16(r1),r2
	lhi	r1,((_mbox_array)>>16)&0xffff
	addui	r1,r1,(_mbox_array)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	lhi	r2,((_mbox_array)>>16)&0xffff
	addui	r2,r2,(_mbox_array)&0xffff
	lw	r3,-12(r30)
	add	r5,r0,r3
	slli	r4,r5,#0x2
	add	r4,r4,r3
	slli	r3,r4,#0x5
	add	r2,r2,r3
	addi	r3,r0,#-1
	sw	24(r2),r3
	addi	r2,r0,#-1
	sw	20(r1),r2
L19:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L17
	nop	; delay slot nop
L18:
L12:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxModuleInit
.data
	.align 2
LC0:
	.ascii "ERROR: In MboxCreate, no empty mbox remain\n\000"
	.align 2
LC1:
	.ascii "ERROR: In MboxCreate, create lock faild\n\000"
	.align 2
LC2:
	.ascii "ERROR: In MboxCreate, create blank_cond faild\n\000"
	.align 2
LC3:
	.ascii "ERROR: In MboxCreate, create data_cond faild\n\000"
	.align 2
LC4:
	.ascii "ERROR: In MboxCreate, create queue faild\n\000"
.text
	.align 2
.proc _MboxCreate
.global _MboxCreate
_MboxCreate:
;  Function 'MboxCreate'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	addi	r1,r0,#-1
	sw	-12(r30),r1
	addi	r1,r0,#1
	sw	-24(r30),r1
	lhi	r1,((_global_create_lock)>>16)&0xffff
	addui	r1,r1,(_global_create_lock)&0xffff
	lw	r2,(r1)
	seqi	r1,r2,#-1
	beqz	r1,L22
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_LockCreate
	nop	; delay slot nop
	lhi	r2,((_global_create_lock)>>16)&0xffff
	addui	r2,r2,(_global_create_lock)&0xffff
	sw	(r2),r1
L22:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_global_create_lock)>>16)&0xffff
	addui	r2,r2,(_global_create_lock)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#0
	sw	-16(r30),r1
L23:
	lw	r1,-16(r30)
	slei	r2,r1,#15
	bnez	r2,L26
	nop	; delay slot nop
	j	L24
	nop	; delay slot nop
L26:
	lw	r1,-16(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r4,((_mbox_array)>>16)&0xffff
	addui	r4,r4,(_mbox_array)&0xffff
	add	r2,r1,r4
	lw	r1,(r2)
	snei	r2,r1,#0
	bnez	r2,L25
	nop	; delay slot nop
	lw	r1,-16(r30)
	sw	-12(r30),r1
	j	L24
	nop	; delay slot nop
L27:
L25:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L23
	nop	; delay slot nop
L24:
	lw	r1,-12(r30)
	seqi	r2,r1,#-1
	beqz	r2,L28
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_global_create_lock)>>16)&0xffff
	addui	r2,r2,(_global_create_lock)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L21
	nop	; delay slot nop
L28:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r2,((_mbox_array)>>16)&0xffff
	addui	r2,r2,(_mbox_array)&0xffff
	add	r1,r2,r1
	sw	-20(r30),r1
	lw	r1,-24(r30)
	snei	r2,r1,#0
	beqz	r2,L29
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_LockCreate
	nop	; delay slot nop
	lw	r2,-20(r30)
	sw	16(r2),r1
	seqi	r1,r1,#-1
	beqz	r1,L29
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC1)>>16)&0xffff
	addui	r2,r2,(LC1)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#0
	sw	-24(r30),r1
L29:
	lw	r1,-24(r30)
	snei	r2,r1,#0
	beqz	r2,L30
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_CondCreate
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,-20(r30)
	sw	20(r2),r1
	seqi	r1,r1,#-1
	beqz	r1,L30
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#0
	sw	-24(r30),r1
L30:
	lw	r1,-24(r30)
	snei	r2,r1,#0
	beqz	r2,L31
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_CondCreate
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,-20(r30)
	sw	24(r2),r1
	seqi	r1,r1,#-1
	beqz	r1,L31
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#0
	sw	-24(r30),r1
L31:
	lw	r1,-24(r30)
	snei	r2,r1,#0
	beqz	r2,L32
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-20(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	jal	_AQueueInit
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L32
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC4)>>16)&0xffff
	addui	r2,r2,(LC4)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#0
	sw	-24(r30),r1
L32:
	lw	r1,-24(r30)
	snei	r2,r1,#0
	bnez	r2,L33
	nop	; delay slot nop
	lw	r1,-20(r30)
	lw	r2,-20(r30)
	addi	r3,r0,#-1
	sw	24(r2),r3
	addi	r2,r0,#-1
	sw	20(r1),r2
	lw	r1,-20(r30)
	addi	r2,r0,#-1
	sw	16(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_global_create_lock)>>16)&0xffff
	addui	r2,r2,(_global_create_lock)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L21
	nop	; delay slot nop
L33:
	lw	r1,-20(r30)
	addi	r2,r0,#1
	sw	(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_global_create_lock)>>16)&0xffff
	addui	r2,r2,(_global_create_lock)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-12(r30)
	j	L21
	nop	; delay slot nop
L21:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxCreate
.data
	.align 2
LC5:
	.ascii "ERROR: MboxOpen handle out of range\n\000"
	.align 2
LC6:
	.ascii "ERROR: MboxOpen handle not in use\n\000"
	.align 2
LC7:
	.ascii "ERROR: MboxOpen handle has in process list\n\000"
.text
	.align 2
.proc _MboxOpen
.global _MboxOpen
_MboxOpen:
;  Function 'MboxOpen'; 16 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	bnez	r2,L36
	nop	; delay slot nop
	lw	r1,(r30)
	sgti	r2,r1,#15
	bnez	r2,L36
	nop	; delay slot nop
	j	L35
	nop	; delay slot nop
L36:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC5)>>16)&0xffff
	addui	r2,r2,(LC5)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L34
	nop	; delay slot nop
L35:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r2,((_mbox_array)>>16)&0xffff
	addui	r2,r2,(_mbox_array)&0xffff
	add	r1,r2,r1
	sw	-12(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-12(r30)
	lw	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L37
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC6)>>16)&0xffff
	addui	r2,r2,(LC6)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L34
	nop	; delay slot nop
L37:
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r1,r0,#0
	sw	-20(r30),r1
	addi	r1,r0,#0
	sw	-24(r30),r1
L38:
	lw	r1,-12(r30)
	lw	r2,-24(r30)
	lw	r1,156(r1)
	slt	r2,r2,r1
	bnez	r2,L41
	nop	; delay slot nop
	j	L39
	nop	; delay slot nop
L41:
	lw	r1,-12(r30)
	lw	r2,-24(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#28
	lw	r1,(r2)
	lw	r2,-16(r30)
	seq	r1,r1,r2
	beqz	r1,L40
	nop	; delay slot nop
	addi	r1,r0,#1
	sw	-20(r30),r1
L42:
L40:
	lw	r2,-24(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-24(r30),r2
	j	L38
	nop	; delay slot nop
L39:
	lw	r1,-20(r30)
	snei	r2,r1,#0
	beqz	r2,L43
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC7)>>16)&0xffff
	addui	r2,r2,(LC7)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L34
	nop	; delay slot nop
L43:
	lw	r1,-12(r30)
	lw	r3,-12(r30)
	lw	r2,156(r3)
	addi	r4,r2,#1
	sw	156(r3),r4
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#28
	lw	r1,-16(r30)
	sw	(r2),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L34
	nop	; delay slot nop
L34:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxOpen
.data
	.align 2
LC8:
	.ascii "ERROR: MboxClose handle out of range\n\000"
	.align 2
LC9:
	.ascii "ERROR: MboxClose handle not inuse\n\000"
	.align 2
LC10:
	.ascii "WARNING: MboxClose pid not in process list\n\000"
.text
	.align 2
.proc _MboxClose
.global _MboxClose
_MboxClose:
;  Function 'MboxClose'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	slti	r2,r1,#0
	bnez	r2,L46
	nop	; delay slot nop
	lw	r1,(r30)
	sgti	r2,r1,#15
	bnez	r2,L46
	nop	; delay slot nop
	j	L45
	nop	; delay slot nop
L46:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC8)>>16)&0xffff
	addui	r2,r2,(LC8)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L44
	nop	; delay slot nop
L45:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r2,((_mbox_array)>>16)&0xffff
	addui	r2,r2,(_mbox_array)&0xffff
	add	r1,r2,r1
	sw	-12(r30),r1
	lw	r1,-12(r30)
	lw	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L47
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC9)>>16)&0xffff
	addui	r2,r2,(LC9)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L44
	nop	; delay slot nop
L47:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r1,r0,#0
	sw	-20(r30),r1
L48:
	lw	r1,-12(r30)
	lw	r2,-20(r30)
	lw	r1,156(r1)
	slt	r2,r2,r1
	bnez	r2,L51
	nop	; delay slot nop
	j	L49
	nop	; delay slot nop
L51:
	lw	r1,-12(r30)
	lw	r2,-20(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#28
	lw	r1,(r2)
	lw	r2,-16(r30)
	seq	r1,r1,r2
	beqz	r1,L50
	nop	; delay slot nop
	j	L49
	nop	; delay slot nop
L52:
L50:
	lw	r2,-20(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-20(r30),r2
	j	L48
	nop	; delay slot nop
L49:
	lw	r1,-12(r30)
	lw	r2,-20(r30)
	lw	r1,156(r1)
	sne	r2,r2,r1
	beqz	r2,L53
	nop	; delay slot nop
	lw	r2,-12(r30)
	lw	r1,-12(r30)
	lw	r2,-12(r30)
	lw	r3,156(r2)
	addi	r2,r3,#-1
	add	r3,r0,r2
	sw	156(r1),r3
L54:
	lw	r1,-12(r30)
	lw	r2,-20(r30)
	lw	r1,156(r1)
	slt	r2,r2,r1
	bnez	r2,L57
	nop	; delay slot nop
	j	L55
	nop	; delay slot nop
L57:
	lw	r1,-12(r30)
	lw	r2,-20(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r3,r2,r1
	addi	r1,r3,#28
	lw	r2,-12(r30)
	lw	r3,-20(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x2
	add	r2,r2,r3
	addi	r3,r2,#32
	lw	r2,(r3)
	sw	(r1),r2
L56:
	lw	r2,-20(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-20(r30),r2
	j	L54
	nop	; delay slot nop
L55:
	j	L58
	nop	; delay slot nop
L53:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC10)>>16)&0xffff
	addui	r2,r2,(LC10)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L58:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L44
	nop	; delay slot nop
L44:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxClose
.data
	.align 2
LC11:
	.ascii "ERROR: MboxSend handle out of range\n\000"
	.align 2
LC12:
	.ascii "ERROR: MboxSend message error\n\000"
	.align 2
LC13:
	.ascii "ERROR: MboxSend handle not inuse\n\000"
	.align 2
LC14:
	.ascii "ERROR: MboxSend pid not in process list\n\000"
	.align 2
LC15:
	.ascii "ERROR: MboxSend no empty buffer after get index\n\000"
	.align 2
LC16:
	.ascii "ERROR: MboxSend AllocLink faild\n\000"
	.align 2
LC17:
	.ascii "ERROR: MboxSend queue push faild\n\000"
	.align 2
LC18:
	.ascii "MESSAGE: MboxSend Success\n\000"
.text
	.align 2
.proc _MboxSend
.global _MboxSend
_MboxSend:
;  Function 'MboxSend'; 24 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#48	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r1,(r30)
	slti	r2,r1,#0
	bnez	r2,L61
	nop	; delay slot nop
	lw	r1,(r30)
	sgti	r2,r1,#15
	bnez	r2,L61
	nop	; delay slot nop
	j	L60
	nop	; delay slot nop
L61:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC11)>>16)&0xffff
	addui	r2,r2,(LC11)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L59
	nop	; delay slot nop
L60:
	lw	r1,4(r30)
	slei	r2,r1,#0
	bnez	r2,L63
	nop	; delay slot nop
	lw	r1,4(r30)
	sgti	r2,r1,#100
	bnez	r2,L63
	nop	; delay slot nop
	lw	r1,8(r30)
	snei	r2,r1,#0
	bnez	r2,L62
	nop	; delay slot nop
	j	L63
	nop	; delay slot nop
L63:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC12)>>16)&0xffff
	addui	r2,r2,(LC12)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L59
	nop	; delay slot nop
L62:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r2,((_mbox_array)>>16)&0xffff
	addui	r2,r2,(_mbox_array)&0xffff
	add	r1,r2,r1
	sw	-12(r30),r1
	lw	r1,-12(r30)
	lw	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L64
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC13)>>16)&0xffff
	addui	r2,r2,(LC13)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L59
	nop	; delay slot nop
L64:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	sw	-16(r30),r1
	addi	r1,r0,#0
	sw	-20(r30),r1
L65:
	lw	r1,-12(r30)
	lw	r2,-20(r30)
	lw	r1,156(r1)
	slt	r2,r2,r1
	bnez	r2,L68
	nop	; delay slot nop
	j	L66
	nop	; delay slot nop
L68:
	lw	r1,-12(r30)
	lw	r2,-20(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#28
	lw	r1,(r2)
	lw	r2,-16(r30)
	seq	r1,r1,r2
	beqz	r1,L67
	nop	; delay slot nop
	j	L66
	nop	; delay slot nop
L69:
L67:
	lw	r2,-20(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-20(r30),r2
	j	L65
	nop	; delay slot nop
L66:
	lw	r1,-12(r30)
	lw	r2,-20(r30)
	lw	r1,156(r1)
	seq	r2,r2,r1
	beqz	r2,L70
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC14)>>16)&0xffff
	addui	r2,r2,(LC14)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L59
	nop	; delay slot nop
L70:
	nop
L71:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	jal	_AQueueLength
	nop	; delay slot nop
	addi	r29,r29,#8
	seqi	r2,r1,#10
	bnez	r2,L73
	nop	; delay slot nop
	lhi	r1,((_curr_message_use)>>16)&0xffff
	addui	r1,r1,(_curr_message_use)&0xffff
	lw	r2,(r1)
	seqi	r1,r2,#100
	bnez	r1,L73
	nop	; delay slot nop
	j	L72
	nop	; delay slot nop
L73:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,20(r2)
	sw	(r1),r3
	jal	_CondHandleWait
	nop	; delay slot nop
	addi	r29,r29,#8
	j	L71
	nop	; delay slot nop
L72:
	addi	r1,r0,#-1
	sw	-24(r30),r1
	lhi	r1,((_global_find_empty_buffer_lock)>>16)&0xffff
	addui	r1,r1,(_global_find_empty_buffer_lock)&0xffff
	lw	r2,(r1)
	seqi	r1,r2,#-1
	beqz	r1,L74
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_LockCreate
	nop	; delay slot nop
	lhi	r2,((_global_find_empty_buffer_lock)>>16)&0xffff
	addui	r2,r2,(_global_find_empty_buffer_lock)&0xffff
	sw	(r2),r1
L74:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_global_find_empty_buffer_lock)>>16)&0xffff
	addui	r2,r2,(_global_find_empty_buffer_lock)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#0
	sw	-20(r30),r1
L75:
	lw	r1,-20(r30)
	slei	r2,r1,#49
	bnez	r2,L78
	nop	; delay slot nop
	j	L76
	nop	; delay slot nop
L78:
	lw	r1,-20(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x3
	sub	r2,r2,r1
	slli	r3,r2,#0x2
	sub	r3,r3,r1
	slli	r1,r3,#0x2
	lhi	r5,((_mbox_message_array)>>16)&0xffff
	addui	r5,r5,(_mbox_message_array)&0xffff
	add	r2,r1,r5
	lw	r1,104(r2)
	snei	r2,r1,#0
	bnez	r2,L77
	nop	; delay slot nop
	lw	r1,-20(r30)
	sw	-24(r30),r1
	lhi	r1,((_mbox_message_array)>>16)&0xffff
	addui	r1,r1,(_mbox_message_array)&0xffff
	lw	r2,-20(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,#1
	sw	104(r1),r2
	j	L76
	nop	; delay slot nop
L79:
L77:
	lw	r2,-20(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-20(r30),r2
	j	L75
	nop	; delay slot nop
L76:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_global_find_empty_buffer_lock)>>16)&0xffff
	addui	r2,r2,(_global_find_empty_buffer_lock)&0xffff
	lw	r3,(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-24(r30)
	seqi	r2,r1,#-1
	beqz	r2,L80
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC15)>>16)&0xffff
	addui	r2,r2,(LC15)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L59
	nop	; delay slot nop
L80:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-24(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	lhi	r3,((_mbox_message_array)>>16)&0xffff
	addui	r3,r3,(_mbox_message_array)&0xffff
	add	r2,r3,r2
	sw	(r1),r2
	jal	_AQueueAllocLink
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-28(r30),r1
	lw	r1,-28(r30)
	snei	r2,r1,#0
	bnez	r2,L81
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC16)>>16)&0xffff
	addui	r2,r2,(LC16)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	lhi	r1,((_mbox_message_array)>>16)&0xffff
	addui	r1,r1,(_mbox_message_array)&0xffff
	lw	r2,-24(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	104(r1),r2
	addi	r1,r0,#-1
	j	L59
	nop	; delay slot nop
L81:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	lw	r2,-28(r30)
	sw	4(r1),r2
	jal	_AQueueInsertLast
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L82
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC17)>>16)&0xffff
	addui	r2,r2,(LC17)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	lhi	r1,((_mbox_message_array)>>16)&0xffff
	addui	r1,r1,(_mbox_message_array)&0xffff
	lw	r2,-24(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	104(r1),r2
	addi	r1,r0,#-1
	j	L59
	nop	; delay slot nop
L82:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,8(r30)
	sw	(r1),r2
	lw	r2,-24(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	lhi	r3,((_mbox_message_array)>>16)&0xffff
	addui	r3,r3,(_mbox_message_array)&0xffff
	add	r2,r3,r2
	sw	4(r1),r2
	lw	r2,4(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
	lhi	r1,((_mbox_message_array)>>16)&0xffff
	addui	r1,r1,(_mbox_message_array)&0xffff
	lw	r2,-24(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	lw	r2,4(r30)
	sw	100(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,24(r2)
	sw	(r1),r3
	jal	_CondHandleSignal
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC18)>>16)&0xffff
	addui	r2,r2,(LC18)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L59
	nop	; delay slot nop
L59:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxSend
.data
	.align 2
LC19:
	.ascii "ERROR: MboxRecv handle out of range\n\000"
	.align 2
LC20:
	.ascii "ERROR: MboxRecv handle not inuse\n\000"
	.align 2
LC21:
	.ascii "ERROR: MboxRecv cant get message\n\000"
.text
	.align 2
.proc _MboxRecv
.global _MboxRecv
_MboxRecv:
;  Function 'MboxRecv'; 24 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	slti	r2,r1,#0
	bnez	r2,L85
	nop	; delay slot nop
	lw	r1,(r30)
	sgti	r2,r1,#15
	bnez	r2,L85
	nop	; delay slot nop
	j	L84
	nop	; delay slot nop
L85:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC19)>>16)&0xffff
	addui	r2,r2,(LC19)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L83
	nop	; delay slot nop
L84:
	lw	r1,(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r2,((_mbox_array)>>16)&0xffff
	addui	r2,r2,(_mbox_array)&0xffff
	add	r1,r2,r1
	sw	-12(r30),r1
	lw	r1,-12(r30)
	lw	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L86
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC20)>>16)&0xffff
	addui	r2,r2,(LC20)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L83
	nop	; delay slot nop
L86:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	sw	-16(r30),r1
L87:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	addi	r3,r2,#4
	sw	(r1),r3
	jal	_AQueueEmpty
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L89
	nop	; delay slot nop
	j	L88
	nop	; delay slot nop
L89:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,24(r2)
	sw	(r1),r3
	jal	_CondHandleWait
	nop	; delay slot nop
	addi	r29,r29,#8
	j	L87
	nop	; delay slot nop
L88:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,4(r2)
	sw	(r1),r3
	jal	_AQueueObject
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	sw	-32(r30),r2
	snei	r1,r2,#0
	beqz	r1,L91
	nop	; delay slot nop
	lw	r1,-32(r30)
	lw	r2,104(r1)
	snei	r1,r2,#0
	bnez	r1,L90
	nop	; delay slot nop
	j	L91
	nop	; delay slot nop
L91:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC21)>>16)&0xffff
	addui	r2,r2,(LC21)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L83
	nop	; delay slot nop
L90:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,4(r30)
	sw	(r1),r2
	lw	r2,-32(r30)
	lw	r3,100(r2)
	sw	4(r1),r3
	jal	_min
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-20(r30),r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,-32(r30)
	sw	(r1),r2
	lw	r2,8(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
	lw	r1,-12(r30)
	lw	r2,4(r1)
	sw	-24(r30),r2
	lw	r1,-24(r30)
	lw	r2,(r1)
	sw	-28(r30),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r30,#-24
	sw	(r1),r2
	jal	_AQueueRemove
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	bnez	r2,L92
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC21)>>16)&0xffff
	addui	r2,r2,(LC21)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L83
	nop	; delay slot nop
L92:
	lw	r1,-32(r30)
	addi	r2,r0,#0
	sw	104(r1),r2
	lhi	r2,((_curr_message_use)>>16)&0xffff
	addui	r2,r2,(_curr_message_use)&0xffff
	lhi	r1,((_curr_message_use)>>16)&0xffff
	addui	r1,r1,(_curr_message_use)&0xffff
	lhi	r2,((_curr_message_use)>>16)&0xffff
	addui	r2,r2,(_curr_message_use)&0xffff
	lw	r3,(r2)
	addi	r2,r3,#-1
	add	r3,r0,r2
	sw	(r1),r3
	lw	r1,-12(r30)
	lw	r2,-28(r30)
	sw	4(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,20(r2)
	sw	(r1),r3
	jal	_CondHandleSignal
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-20(r30)
	j	L83
	nop	; delay slot nop
L83:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxRecv
	.align 2
.proc _MboxCloseAllByPid
.global _MboxCloseAllByPid
_MboxCloseAllByPid:
;  Function 'MboxCloseAllByPid'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L94:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L97
	nop	; delay slot nop
	j	L95
	nop	; delay slot nop
L97:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r2,r1,r5
	lw	r1,(r2)
	snei	r2,r1,#0
	beqz	r2,L96
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#0
	sw	-16(r30),r1
L99:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r2,r1,r5
	lw	r1,-16(r30)
	lw	r2,156(r2)
	slt	r1,r1,r2
	bnez	r1,L102
	nop	; delay slot nop
	j	L100
	nop	; delay slot nop
L102:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r3,r2,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r1,r3,r5
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#28
	lw	r1,(r2)
	lw	r2,(r30)
	seq	r1,r1,r2
	beqz	r1,L101
	nop	; delay slot nop
	j	L100
	nop	; delay slot nop
L103:
L101:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L99
	nop	; delay slot nop
L100:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r2,r1,r5
	lw	r1,-16(r30)
	lw	r2,156(r2)
	sne	r1,r1,r2
	beqz	r1,L104
	nop	; delay slot nop
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r2,r1,r5
	lhi	r1,((_mbox_array)>>16)&0xffff
	addui	r1,r1,(_mbox_array)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	add	r1,r1,r2
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r3,r2,r5
	lw	r4,156(r3)
	addi	r2,r4,#-1
	add	r3,r0,r2
	sw	156(r1),r3
L105:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r1,r2,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r2,r1,r5
	lw	r1,-16(r30)
	lw	r2,156(r2)
	slt	r1,r1,r2
	bnez	r1,L108
	nop	; delay slot nop
	j	L104
	nop	; delay slot nop
L108:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r3,r2,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r1,r3,r5
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r3,r2,r1
	addi	r1,r3,#28
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r4,r3,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r2,r4,r5
	lw	r3,-16(r30)
	add	r4,r0,r3
	slli	r3,r4,#0x2
	add	r2,r2,r3
	addi	r3,r2,#32
	lw	r2,(r3)
	sw	(r1),r2
L107:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L105
	nop	; delay slot nop
L106:
L104:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r2,r3,#0x5
	lhi	r5,((_mbox_array)>>16)&0xffff
	addui	r5,r5,(_mbox_array)&0xffff
	add	r3,r2,r5
	lw	r2,16(r3)
	sw	(r1),r2
	jal	_LockHandleRelease
	nop	; delay slot nop
	addi	r29,r29,#8
L98:
L96:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L94
	nop	; delay slot nop
L95:
	addi	r1,r0,#1
	j	L93
	nop	; delay slot nop
L93:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxCloseAllByPid
.data
	.align 2
_mbox_array:
	.space 2560
	.align 2
_mbox_message_array:
	.space 5400
